# ================================
# Stage 1: Build React frontend
# ================================
FROM node:22.15.0-alpine AS builder

# Work inside frontend directory
WORKDIR /app/frontend

# Copy only package files to install deps
COPY frontend/package.json frontend/yarn.lock ./
RUN yarn install --frozen-lockfile

# Copy full frontend source and build
COPY frontend/ ./
RUN yarn build


# ================================
# Stage 2: Django + Gunicorn Backend
# ================================
FROM python:3.11-slim AS final

# Install system dependencies (libpq-dev for Postgres)
RUN apt-get update && apt-get install -y \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# App directory
WORKDIR /app

# Copy and install Python requirements
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install gunicorn

# Copy Django backend source code
COPY . .

# Copy built React app from builder into Django's static files directory
# This assumes your Django STATIC_ROOT is configured to serve from here.
COPY --from=builder /app/frontend/dist ./static/

# Collect static files (important for Django to find them)
RUN python manage.py collectstatic --noinput

# Create a non-root user and switch to it (Checkov CKV_DOCKER_3 compliant)
RUN useradd -m appuser
USER appuser

# Expose Django's port
EXPOSE 8000

# Run Django with Gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "your_project.wsgi:application"]